{"version":3,"sources":["components/Loader.js","components/Error.js","components/Category.js","data.js","components/CategoryInput.js","components/Categories.js","components/Meal.js","components/Navigation.js","components/Meals.js","MealsDetails.js","App.js","index.js"],"names":["Loader","className","role","Error","message","Category","category","to","strCategory","src","strCategoryThumb","alt","BASE_URL","FoodApi","fetch","response","ok","json","data","status","id","CategoryInput","useState","input","setInput","history","useHistory","optimateInput","str","slice","toUpperCase","type","placeholder","value","onChange","event","target","onClick","console","log","push","Categories","loading","setLoading","categories","setCategories","error","setError","useEffect","getCategories","then","setTimeout","catch","map","Meal","meal","useParams","idMeal","strMealThumb","strMeal","Navigation","Meals","match","meals","setMeals","params","getMealsByCategory","MealsDetails","setLoad","mealDetails","setMealDetails","getMealById","strInstructions","strIngredient1","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30637dbb.chunk.js","sourcesContent":["const Loader = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","const Error = ({ message }) => {\r\n    return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import { CategoryContext } from '../App';\r\n\r\nconst Category = ({ category }) => {\r\n    //const context = useContext(CategoryContext)\r\n    return (\r\n        <Link className='col-6 col-sm-4 col-md-3 d-flex align-items-strech text-decoration-none'\r\n                to ={`/${category.strCategory}`}>\r\n            <div className='card text-center my-2'>\r\n                <img src={category.strCategoryThumb} alt = {category.strCategory} />\r\n                <div className='card-body'>\r\n                    <h3 className='card-title'>\r\n                        {category.strCategory}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Category","const BASE_URL = 'https://www.themealdb.com/api/json/v1/1';\r\n\r\nexport default class FoodApi{\r\n\r\n/*     static getCategories(){\r\n        return fetch(`${BASE_URL}/categories.php`)\r\n        .then(response => response.json())\r\n        .then(data => data)\r\n        .catch(error => { throw new Error(error.message)})\r\n    } */\r\n\r\n    static async getCategories(){\r\n        try{\r\n            const response = await fetch(`${BASE_URL}/categories.php`);\r\n            if(response.ok){\r\n                const data = await response.json()\r\n                return data\r\n            }\r\n            throw new Error(response.status)\r\n\r\n        }catch(error){\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    static async getMealsByCategory(category){\r\n        try{\r\n            const response = await fetch(`${BASE_URL}/filter.php?c=${category}`);\r\n            if(response.ok){\r\n                const data = await response.json()\r\n                return data\r\n            }\r\n            throw new Error(response.status)\r\n\r\n        }catch(error){\r\n            throw new Error(error)\r\n        }\r\n    }\r\n\r\n    static async getMealById(id){\r\n        try{\r\n            const response = await fetch(`${BASE_URL}/lookup.php?i=${id}`);\r\n            if(response.ok){\r\n                const data = await response.json()\r\n                return data\r\n            }\r\n            throw new Error(response.status)\r\n\r\n        }catch(error){\r\n            throw new Error(error)\r\n        }\r\n\r\n    }\r\n}","import { CategoryContext } from '../App';\r\nimport {useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst CategoryInput = ()=>{\r\n\r\n    const [input, setInput] = useState('')\r\n\r\n    //const context = useContext(CategoryContext)\r\n\r\n    const history = useHistory();\r\n\r\n    const optimateInput =(str)=>{\r\n        return str.slice(0,1).toUpperCase() + str.slice(1)  // 'beef' -> 'B' + 'eef'\r\n    }\r\n\r\n    const inputHandler = (event)=>{\r\n        setInput(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-group my-5\">\r\n            <input type=\"text\" className=\"form-control\"\r\n                placeholder=\"type category\"\r\n                aria-describedby=\"search-btn\"\r\n                value = {input}\r\n                onChange = {inputHandler}\r\n            />\r\n            <button className=\"btn btn-primary\"\r\n                    onClick = {()=>{                   \r\n                        console.log(optimateInput(input));                       \r\n                        //context.changeCategory(optimateInput(input))\r\n                        history.push(`/${optimateInput(input)}`)\r\n                       setInput('');       \r\n                    }}\r\n                    id=\"search-btn\"\r\n            >search category</button>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CategoryInput","import React, {useEffect, useState} from 'react';\r\nimport Loader from './Loader';\r\nimport Error from './Error';\r\nimport Category from './Category';\r\nimport FoodApi from '../data';\r\nimport CategoryInput from './CategoryInput';\r\n\r\nexport default function Categories(){\r\n    const [loading, setLoading] = useState(true)\r\n    const [categories, setCategories] = useState([])\r\n    const [error, setError] = useState(null)\r\n   \r\n    useEffect(()=>{\r\n        FoodApi.getCategories()\r\n            .then(data => {\r\n                setTimeout(() => { \r\n                    setCategories([...data.categories])\r\n                    setLoading(false)\r\n                }, 1000)\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message)\r\n                setLoading(false)\r\n            })\r\n    },[])\r\n\r\n    \r\n\r\n    const renderCategories =()=> {\r\n        return (\r\n  \r\n            <>\r\n            <CategoryInput />\r\n                {loading ?\r\n                    <Loader /> : error ? <Error message={error} /> :\r\n                        categories.map(category => <Category key={category.strCategory} category={category} />)}\r\n            </>\r\n       \r\n        )\r\n    }\r\n\r\n\r\n   \r\n        return (\r\n            <div className ='container'>\r\n                <h2 className = 'text-center text-primary my-5'>Our categories of meals</h2>\r\n            <div className='row'>\r\n                {renderCategories()}\r\n            </div>\r\n            </div>\r\n        )\r\n    \r\n\r\n}","import {Link, useParams} from 'react-router-dom';\r\n\r\n\r\nconst Meal = ({ meal }) => {\r\n    const {category} = useParams();\r\n\r\n    return (\r\n        <Link className=\"col-lg-3 col-md-4 col-6 mb-2 d-flex align-items-stretch\"\r\n               to = {`/${category}/${meal.idMeal}`}>\r\n            <div className=\"card mb-2\" >\r\n                <img src={meal.strMealThumb} className=\"card-img-top\" alt={meal.strMeal} />\r\n                <div className=\"card-body\" >\r\n                    <h5 className=\"card-title\">{meal.strMeal}</h5>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Meal","import {Link, useParams} from 'react-router-dom'\r\n\r\n\r\nconst Navigation = ()=>{\r\n    const {category, idMeal} = useParams()\r\n    return(\r\n        <nav className ='navbar bg-dark d-flex justify-content-end'>\r\n            {idMeal ? \r\n            <Link className = 'navbar-brand mx-4 text-white'\r\n                    to = {`/${category}`}>\r\n                back to meals list\r\n            </Link>:null}\r\n            <Link className = 'navbar-brand mx-4 text-white'\r\n                  to = '/'>back to categories</Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React, { useState, useEffect } from 'react';\r\nimport Loader from './Loader';\r\nimport Error from './Error';\r\nimport Meal from './Meal';\r\nimport FoodApi from '../data';\r\nimport Navigation from './Navigation';\r\n\r\nconst Meals = ({ match }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [meals, setMeals] = useState([]);\r\n    const [error, setError] = useState(null)\r\n\r\n    const category = match.params.category\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        setError(null)\r\n        FoodApi.getMealsByCategory(category)\r\n            .then(data => {\r\n                setTimeout(() => {\r\n                    console.log(data)\r\n                    if(data.meals){\r\n                    setLoading(false);\r\n                    setMeals(data.meals)\r\n                    }else{\r\n                        setError('no such category');\r\n                        setLoading(false)\r\n                    }}, 1000)\r\n                })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                setError(error.message)\r\n            })\r\n    },[category])\r\n\r\n    const renderMeals = () => {\r\n        return loading && !error ? <Loader /> : error ? <Error message={error} /> :\r\n            meals.map(meal => <Meal key={meal.idMeal} meal={meal} />)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className ='container'>\r\n            <Navigation />\r\n            <h2 className ='text-primary text-center my-5'>{category}</h2>\r\n        <div className='row'>\r\n            {renderMeals()}\r\n        </div>\r\n        </div>)\r\n\r\n\r\n}\r\n\r\nexport default Meals","import { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport FoodApi from './data';\r\nimport Loader from './components/Loader';\r\nimport Error from './components/Error';\r\nimport Navigation from './components/Navigation';\r\n\r\nconst MealsDetails = ()=>{\r\n\r\nconst [loading, setLoad] = useState(true);\r\nconst [mealDetails, setMealDetails] = useState(null);\r\nconst [error, setError] = useState(null);\r\n\r\nconst {idMeal} = useParams();\r\n\r\nuseEffect(()=>{\r\n    FoodApi.getMealById(idMeal)\r\n    .then((data)=>{\r\n        setTimeout(()=>{\r\n            setMealDetails({...data.meals[0]})\r\n            setLoad(false)\r\n        },1000)\r\n    })\r\n    .catch((error)=>{\r\n        setError(error.message)\r\n        setLoad(false)\r\n    })\r\n}, [idMeal])\r\n\r\n    return(\r\n        loading ?\r\n                <Loader /> : error ? <Error message={error} /> :         \r\n                        <div className=\"container\">\r\n                            <Navigation />\r\n                            <div className=\"card my-2 col-8 mx-auto\">\r\n                                <img src={mealDetails.strMealThumb} alt={mealDetails.strMeal} />\r\n                                <div className=\"card-body\">\r\n                                    <h2 className=\"card-title text-primary\">{mealDetails.strMeal}</h2>\r\n                                    <h4 className=\"card-title\">\r\n                                        Category: {mealDetails.strCategory}\r\n                                    </h4>\r\n                                    <p className=\"card-text\">Recipe: {mealDetails.strInstructions}</p>\r\n                                    <h5>Main ingredient: {mealDetails.strIngredient1}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n    )\r\n}\r\n\r\nexport default MealsDetails","import './App.css';\nimport Categories from './components/Categories';\nimport Meals from './components/Meals';\nimport { Switch, Route } from 'react-router-dom';\nimport MealsDetails from './MealsDetails';\n\n\n\nconst App = ()=>{\n  \n  \n    return (\n      <Switch>\n        <Route exact path =\"/\" component = {Categories} />\n        <Route exact path = \"/:category\" component = {Meals}/>\n        <Route path = \"/:category/:idMeal\" component = {MealsDetails} />\n      </Switch>\n    )\n  \n}\n\nexport default App;\n\n//without Route\n\n//export const CategoryContext = React.createContext();\n\n/* \nconst App = ()=>{\n  \n  const [category, setCategory] = useState(null)\n  const changeCategory = (category) => {\n    console.log(category)\n    setCategory(category)\n  }\n  \n    return (\n      <>\n        <CategoryContext.Provider value ={{\n          changeCategory,\n          category\n        }}>\n          <div className='container my-5'>\n            <Categories />\n          </div>\n        </CategoryContext.Provider>\n        <div className='container my-5'>\n          {category? <Meals category={category} /> : null}\n        </div>\n      </>\n    )\n  \n} */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}